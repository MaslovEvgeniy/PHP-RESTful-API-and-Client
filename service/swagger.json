{
    "swagger": "2.0",
    "info": {
        "title": "MyAPI",
        "description": "Simple REST API build on PHP",
        "contact": {
            "email": "maslovevgeniy98@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "host": "codeit.pro",
    "basePath": "/maslov/restservice",
    "schemes": [
        "https"
    ],
    "paths": {
        "/auth/register": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Registers new user",
                "operationId": "userRegister",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "User data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication token"
                    },
                    "400": {
                        "description": "Validation errors"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "auth"
                ],
                "summary": "Logs user into the system",
                "description": "",
                "operationId": "loginUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "login and password",
                        "in": "header",
                        "description": "User login and password divided by ':'",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Authentication token"
                    },
                    "400": {
                        "description": "Invalid username/password"
                    }
                }
            }
        },
        "/post": {
            "get": {
                "tags": [
                    "post"
                ],
                "summary": "Find all posts",
                "description": "Returns all posts",
                "operationId": "getPosts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Posts fields to return",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Post"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "post"
                ],
                "summary": "Adding new post",
                "operationId": "addPost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "postData",
                        "in": "body",
                        "description": "Post object that needs to be added to the DB",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Post"
                        }
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid input"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/post/{postId}": {
            "get": {
                "tags": [
                    "post"
                ],
                "summary": "Find one post",
                "description": "Returns one post",
                "operationId": "getPost",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID of post",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Post fields to return",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Post"
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "post"
                ],
                "summary": "Update an existing post",
                "operationId": "updatePost",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "postData",
                        "in": "body",
                        "description": "Post title and/or content",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Post"
                        }
                    },
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "ID of post",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied or validation exception"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "post"
                ],
                "summary": "Deletes a post",
                "operationId": "deletePost",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "postId",
                        "in": "path",
                        "description": "Post id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user personal data",
                "description": "Getting data of authenticated user",
                "operationId": "getUserData",
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    },
                    "400": {
                        "description": "Invalid token supplied"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        }
    },
    "definitions": {
        "Post": {
            "required": [
                "title",
                "content"
            ],
            "properties": {
                "title": {
                    "type": "string"
                },
                "content": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "User": {
            "required": [
                "email",
                "username",
                "name",
                "password",
                "birth"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "birth": {
                    "type": "string"
                }
            },
            "type": "object"
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}